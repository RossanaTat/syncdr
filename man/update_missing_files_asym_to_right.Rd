% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/asymmetric_sync.R
\name{update_missing_files_asym_to_right}
\alias{update_missing_files_asym_to_right}
\title{Full asymmetric synchronization of non common files}
\usage{
update_missing_files_asym_to_right(
  sync_status,
  recurse = TRUE,
  verbose = getOption("syncdr.verbose")
)
}
\arguments{
\item{sync_status}{object of class 'syncdr_status' with info on sync status and comparison of directories}

\item{recurse}{logical, TRUE by default.
If recurse is TRUE: when copying a file from source folder to destination folder, the file will be copied into the corresponding (sub)directory.
If the sub(directory) where the file is located does not exist in destination folder (or you are not sure), set recurse to FALSE,
and the file will be copied at the top level}

\item{verbose}{logical. If TRUE, display directory tree before and after synchronization. Default is FALSE}
}
\value{
print "synchronized"
}
\description{
update non common files in right directory based on left one -i.e., the function will:
\itemize{
\item for common_files:
\itemize{
\item do nothing, left unchanged
}
\item for non common files,
\itemize{
\item copy those files that are only in left to right
\item delete in right those files that are only in right (i.e., files 'missing in left')
}
}
}
\examples{
# Compare directories with 'compare_directories()'
e <- toy_dirs()

# Get left and right directories' paths
left  <- e$left
right <- e$right
sync_status <- compare_directories(left, right)
update_missing_files_asym_to_right(sync_status = sync_status)
}
